This folder contains the code for genetic programming (GP) and particle filter (PF), and the datasets of E_cell,yeast and HeLa.

main.m : Main program
gppf_mainloop.m : Run one evolutionary loop and generate a new population, i.e. use gp to infer the terms of the GRN model
gppf_init.m : Initialize population variables
gppf_evaluate.m : Evaluate individuals
gppf_olsq.m : Calculate [err] values and decide which terms must be eliminated
gppf_lsq.m : Estimate parameters using particle filter and error values
gppf_selection.m : Select operator, mix the new generation 
gppf_result.m : Get information string about the best solution of a population
tree_crossover.m : Recombine two trees
tree_draw.m : Create a figure and draw the tree
tree_genrnd.m : Generate a tree by user
tree_getsubtree.m : Get a subtree of a tree
tree_inserttree.m : Insert a tree into a tree (as a subtree)
tree_mutate.m : Mutate a tree (mutate one randomly selected node)
tree_size.m : Get the size of tree
tree_stringrc.m : Decode the tree to string

e_cell.mat : The E-cell dataset. The first three columns are three sets of time series data (x1,x2,x3) generated by E-cell model, and the last three columns are dx1/dt,dx2/dt,dx3/dt. 
yeast.mat : The five time-series gene-expression data are selected from yeast dataset. The first five columns are five sets of time series data (x1 to x5),and the last five columns are dx1/dt to dx5/dt. 
	The whole yeast data can be downloaded from https://www.yeastgenome.org/downloads
hela.mat : The four time-series gene-expression data are selected from HeLa datasets. The first four columns are four sets of time series data (x1 to x4),and the last four columns are dx1/dt to dx4/dt. 
	The whole HeLa datasets can be downloaded from http://genome-www.stanford.edu/Human-CellCycle/HeLa/

If you find our method is useful, please cite our paper: Baoshan Ma*, Xiangtian Jiao, Fanyu Meng, Fengping Xu, Yao Geng, Rubin Gao, Wei Wang and Yeqing Sun. Identification of Gene Regulatory Networks by Integrating Genetic Programming with Particle Filtering.  IEEE Access, 2019, 7: 113760-113770.

% The genetic programming is based on the matlab package developed by Dr. J. Mad¨¢r, so we are very grateful to J. Mad¨¢r et al.
% J. Mad¨¢r, J. Abonyi, and F. Szeifert, ¡°Genetic Programming for the Identification of Nonlinear Input-Output Models,¡± Industrial & Engineering Chemistry Research, vol. 44, no. 9, pp. 3178-3186, 2005.
